{
    "name": "ts-minimal-kit-web",
    "version": "2.1.0",
    "description": "",
    "type": "module",
    "main": "./dist/app.js",
    "scripts": {
        "dev": "npm run dev:server & npm run dev:client",
        "dev:server": "npx tsc --project tsconfig.server.json --watch",
        "dev:client": "npx tsc --project tsconfig.client.json --watch",
        "build": "npm run build:server && npm run build:client",
        "build:server": "npx tsc --project tsconfig.server.json",
        "build:client": "npx tsc --project tsconfig.client.json",
        "start": "node ./dist/app.js",
        "build:start": "npm run build && npm start",
        "clean": "node -e \"import('fs').then(fs => { fs.rmSync('dist', {recursive: true, force: true}); fs.readdirSync('public').filter(f => !['index.html','styles.css'].includes(f)).forEach(f => fs.rmSync('public/' + f, {recursive: true, force: true})); fs.readdirSync('.').filter(f => f.endsWith('.tsbuildinfo')).forEach(f => fs.rmSync(f, {force: true})); })\"",
        "degit": "node -e \"import('fs').then(fs => fs.rmSync('.git', {recursive: true, force: true}))\"",
        "test": "echo \"Error: no test specified\" && exit 1",
        "build:start:showcase": "npm run build:showcase && npm run start",
        "build:showcase": "bash -c 'trap \"npm run showcase:restore\" EXIT; npm run showcase:swap && npm run build:server && npm run build:client'",
        "showcase:swap": "node -e \"import('fs').then(fs => { fs.renameSync('src/client/index.ts', 'src/client/index.ts.backup'); fs.copyFileSync('src/client/SHOWCASE.ts', 'src/client/index.ts'); })\"",
        "showcase:restore": "node -e \"import('fs').then(fs => { fs.rmSync('src/client/index.ts', {force: true}); fs.renameSync('src/client/index.ts.backup', 'src/client/index.ts'); })\""
    },
    "keywords": [
        "typescript",
        "minimal",
        "esm",
        "web"
    ],
    "author": "",
    "license": "ISC",
    "devDependencies": {
        "@types/node": "*",
        "typescript": "*"
    }
}
